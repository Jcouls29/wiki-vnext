# ===============================================
# GROUPS
# ===============================================

extend type Query {
  groups: [Group] @auth(requires: ["write:groups", "manage:groups", "manage:system"])

  groupById(
    id: UUID!
  ): Group @auth(requires: ["write:groups", "manage:groups", "manage:system"])
}

extend type Mutation {
  createGroup(
    name: String!
  ): GroupResponse @auth(requires: ["write:groups", "manage:groups", "manage:system"])

  updateGroup(
    id: UUID!
    name: String!
    redirectOnLogin: String!
    permissions: [String]!
    rules: [GroupRuleInput]!
  ): DefaultResponse @auth(requires: ["write:groups", "manage:groups", "manage:system"])

  deleteGroup(
    id: UUID!
  ): DefaultResponse @auth(requires: ["write:groups", "manage:groups", "manage:system"])

  assignUserToGroup(
    groupId: UUID!
    userId: UUID!
  ): DefaultResponse @auth(requires: ["write:groups", "manage:groups", "manage:system"])

  unassignUserFromGroup(
    groupId: UUID!
    userId: UUID!
  ): DefaultResponse @auth(requires: ["write:groups", "manage:groups", "manage:system"])
}

# -----------------------------------------------
# TYPES
# -----------------------------------------------

type GroupResponse {
  status: ResponseStatus
  group: Group
}

type Group {
  id: UUID
  name: String
  isSystem: Boolean
  redirectOnLogin: String
  redirectOnFirstLogin: String
  redirectOnLogout: String
  permissions: [String]
  rules: [GroupRule]
  users(
    page: Int
    pageSize: Int
    orderBy: UserOrderBy
    orderByDirection: OrderByDirection
    # Filter by name / email
    filter: String
    ): [UserMinimal]
  userCount: Int
  createdAt: Date
  updatedAt: Date
}

type GroupRule {
  id: UUID
  name: String
  mode: GroupRuleMode
  match: GroupRuleMatch
  roles: [String]
  path: String
  locales: [String]
  sites: [UUID]
}

input GroupRuleInput {
  id: UUID!
  name: String!
  mode: GroupRuleMode!
  match: GroupRuleMatch!
  roles: [String]!
  path: String!
  locales: [String]!
  sites: [UUID]
}

enum GroupRuleMode {
  ALLOW
  DENY
  FORCEALLOW
}

enum GroupRuleMatch {
  START
  EXACT
  END
  REGEX
  TAG
  TAGALL
}
